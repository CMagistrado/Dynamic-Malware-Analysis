#!/bin/bash
#
# Install script for cuckoo
#
# https://infosecspeakeasy.org/t/howto-build-a-cuckoo-sandbox/27
sudo apt-get remove apt-listchanges
sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y && sudo apt-get autoremove -y
sudo apt-get install git mongodb python python-dev python-pip python-m2crypto libmagic1 swig libvirt-dev upx-ucl libssl-dev wget unzip p7zip-full geoip-database libgeoip-dev libjpeg-dev mono-utils yara python-yara ssdeep libfuzzy-dev exiftool curl openjdk-8-jre-headless zlib1g-dev, vim, wkhtmltopdf xvfb xfonts-100dpi, postgresql postgresql-contrib libpq-dev -y
# ----------------------- #
# Install tcpdump
# ----------------------- #
sudo apt-get install tcpdump libcap2-bin -y 
sudo chmod +s /usr/sbin/tcpdump

# ----------------------- #
# Install ClamAV
# ----------------------- #
sudo apt-get install clamav clamav-daemon clamav-freshclam -y


# ----------------------- #
# Install pydeep
# ----------------------- #
sudo pip install git+https://github.com/kbandla/pydeep.git

# ----------------------- #
# Install Malheur, which is used for malware behavior correlation
# ----------------------- #
sudo apt-get install uthash-dev libconfig-dev libarchive-dev libtool autoconf automake checkinstall -y
git clone https://github.com/rieck/malheur.git
cd malheur
./bootstrap
./configure --prefix=/usr
make

sudo checkinstall
cd
# ----------------------- #
# Install  Volatility
# ----------------------- #
sudo apt-get install python-pil
sudo pip install distorm3 pycrypto openpyxl -y
sudo pip install git+https://github.com/volatilityfoundation/volatility.git

sudo apt-get install libboost-all-dev -y

# sudo pip install git+https://github.com/buffer/pyv8 # This can take a long time, and may appear to hang. Also currently broken.


# ----------------------- #
# Install Suricata IDS
# ----------------------- #
sudo apt-get install suricata -y

sudo cp /etc/suricata/suricata.yaml /etc/suricata/suricata-cuckoo.yaml

sudo vim /etc/suricata/suricata-cuckoo.yaml

'
Manual Process

Disable the fast and unified2 log types; we don’t need those.
Locate file-store: Set enabled to yes. Set force-md5 and force-filestore to yes. Enable file-log, which should be located right below it.
Locate reassembly

Set depth, to 0 (without a unit of measurement)
Under default-config, set request-body-limit and response-body-limit to 0 (without any measurement unit):

Under the vars: address-groups: section, set EXTERNAL_NET to any.
Download etupdate to update Emerging Threat’s Open IDS rules:
'

git clone https://github.com/seanthegeek/etupdate.git
sudo cp etupdate/etupdate /usr/sbin
sudo /usr/sbin/etupdate -V


sudo crontab -e

# Interactive Part
# 42 * * * * /usr/sbin/etupdate


sudo apt-get install qemu-kvm libvirt-clients libvirt-daemon virt-manager -y

sudo usermod -a -G kvm $USER
sudo usermod -a -G libvirt $USER

# The username and location of where to ssh to might be incorrect. the instructions aren't too clear as to where you're ssh-ing to.
ssh -Y -L 5900:127.0.0.1:5900 $USER@127.0.0.1


virt-manager

# Manual Process here
# In the File menu of the Virtual Machine Manager window, select Connection Details, then select the Virtual Networks section.
#
# Stop the Default network, then delete it.
# 
# Create a new isolated virtual network called cuckoo at 192.168.100.0/24, using the wizard.

sudo adduser cuckoo
sudo usermod -L cuckoo

sudo usermod -aG kvm cuckoo
sudo usermod -aG libvirt cuckoo

sudo su cuckoo
cd
wget https://bitbucket.org/mstrobel/procyon/downloads/procyon-decompiler-0.5.30.jar
git clone https://github.com/spender-sandbox/cuckoo-modified.git
mkdir vmshared
cp cuckoo-modified/agent/agent.py vmshared/agent.pyw
exit
sudo chmod ug=rwX,o=rX ~cuckoo/vmshared
sudo mv ~cuckoo/cuckoo-modified /opt/cuckoo
sudo pip install -r /opt/cuckoo/requirements.txt
sudo su cuckoo
cd /opt/cuckoo/utils
./community.py -afw
exit

sudo apt-get install nginx apache2-utils -y

sudo usermod -aG cuckoo $USER
# ----------------------- #
# Create SSL certificate
# ----------------------- #
mkdir ~/ssl
cd ~/ssl

openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout cuckoo.key -out cuckoo.crt
# Manual part again.
# Fill in the prompts. Watch out for Common Name (e.g. server FQDN or YOUR domain name), which is the IP address or domain name that you will be hosting Cuckoo web services on. it is the most important field.
rm cuckoo.csr
openssl dhparam -out dhparam.pem 4096
cd
sudo mv ssl /etc/nginx
